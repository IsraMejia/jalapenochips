;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13/05/2024 03:41:06 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2818      	GOTO       24
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0005	0x1283      	BCF        STATUS, 5
0x0006	0x1303      	BCF        STATUS, 6
0x0007	0x0823      	MOVF       ___DoICPAddr+1, 0
0x0008	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0009	0x0822      	MOVF       ___DoICPAddr, 0
0x000A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x000B	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000C	0x2005      	CALL       _____DoICP
0x000D	0x118A      	BCF        PCLATH, 3
0x000E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000F	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0010	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0011	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0012	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0013	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0014	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0015	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0016	0x280C      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0017	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0018	0x1283      	BCF        STATUS, 5
0x0019	0x1303      	BCF        STATUS, 6
0x001A	0x01A0      	CLRF       _i
0x001B	0x01A1      	CLRF       33
;MyProject.c,16 :: 		void main() {
;MyProject.c,17 :: 		TRISB = 0;      // Configuramos el puerto B como salida
0x001C	0x1683      	BSF        STATUS, 5
0x001D	0x0186      	CLRF       TRISB
;MyProject.c,18 :: 		TRISA = 0x3F;   // Cinco unos para configurar el puerto A
0x001E	0x303F      	MOVLW      63
0x001F	0x0085      	MOVWF      TRISA
;MyProject.c,19 :: 		ADCON1 = 6;     // Configura entradas digitales en el puerto A y E
0x0020	0x3006      	MOVLW      6
0x0021	0x009F      	MOVWF      ADCON1
;MyProject.c,20 :: 		PORTB = 0;      // Inicialmente apagado
0x0022	0x1283      	BCF        STATUS, 5
0x0023	0x0186      	CLRF       PORTB
;MyProject.c,22 :: 		while (1) {
L_main4:
;MyProject.c,23 :: 		if (PORTA == 0x00) {
0x0024	0x0805      	MOVF       PORTA, 0
0x0025	0x3A00      	XORLW      0
0x0026	0x1D03      	BTFSS      STATUS, 2
0x0027	0x282A      	GOTO       L_main6
;MyProject.c,25 :: 		PORTB = 0x00;
0x0028	0x0186      	CLRF       PORTB
;MyProject.c,26 :: 		} else if (PORTA == 0x01) {
0x0029	0x2945      	GOTO       L_main7
L_main6:
0x002A	0x0805      	MOVF       PORTA, 0
0x002B	0x3A01      	XORLW      1
0x002C	0x1D03      	BTFSS      STATUS, 2
0x002D	0x2831      	GOTO       L_main8
;MyProject.c,28 :: 		PORTB = 0xFF;
0x002E	0x30FF      	MOVLW      255
0x002F	0x0086      	MOVWF      PORTB
;MyProject.c,29 :: 		} else if (PORTA == 0x02) {
0x0030	0x2945      	GOTO       L_main9
L_main8:
0x0031	0x0805      	MOVF       PORTA, 0
0x0032	0x3A02      	XORLW      2
0x0033	0x1D03      	BTFSS      STATUS, 2
0x0034	0x286F      	GOTO       L_main10
;MyProject.c,31 :: 		PORTB = 0x80; // Estado inicial del corrimiento 10000000
0x0035	0x3080      	MOVLW      128
0x0036	0x0086      	MOVWF      PORTB
;MyProject.c,32 :: 		i = 0; // Inicializamos i a 0
0x0037	0x01A0      	CLRF       _i
0x0038	0x01A1      	CLRF       _i+1
;MyProject.c,33 :: 		for (i = 0; i < 7; i++) {
0x0039	0x01A0      	CLRF       _i
0x003A	0x01A1      	CLRF       _i+1
L_main11:
0x003B	0x3080      	MOVLW      128
0x003C	0x0621      	XORWF      _i+1, 0
0x003D	0x00F0      	MOVWF      R0
0x003E	0x3080      	MOVLW      128
0x003F	0x0270      	SUBWF      R0, 0
0x0040	0x1D03      	BTFSS      STATUS, 2
0x0041	0x2844      	GOTO       L__main40
0x0042	0x3007      	MOVLW      7
0x0043	0x0220      	SUBWF      _i, 0
L__main40:
0x0044	0x1803      	BTFSC      STATUS, 0
0x0045	0x286C      	GOTO       L_main12
;MyProject.c,34 :: 		PORTB = (PORTB >> 1) | ((PORTB & 0x01) << 7);
0x0046	0x0806      	MOVF       PORTB, 0
0x0047	0x00F3      	MOVWF      R3
0x0048	0x0CF3      	RRF        R3, 1
0x0049	0x13F3      	BCF        R3, 7
0x004A	0x3001      	MOVLW      1
0x004B	0x0506      	ANDWF      PORTB, 0
0x004C	0x00F2      	MOVWF      R2
0x004D	0x3007      	MOVLW      7
0x004E	0x00F1      	MOVWF      R1
0x004F	0x0872      	MOVF       R2, 0
0x0050	0x00F0      	MOVWF      R0
0x0051	0x0871      	MOVF       R1, 0
L__main41:
0x0052	0x1903      	BTFSC      STATUS, 2
0x0053	0x2858      	GOTO       L__main42
0x0054	0x0DF0      	RLF        R0, 1
0x0055	0x1070      	BCF        R0, 0
0x0056	0x3EFF      	ADDLW      255
0x0057	0x2852      	GOTO       L__main41
L__main42:
0x0058	0x0870      	MOVF       R0, 0
0x0059	0x0473      	IORWF      R3, 0
0x005A	0x0086      	MOVWF      PORTB
;MyProject.c,35 :: 		delay_ms(500);
0x005B	0x300D      	MOVLW      13
0x005C	0x00FB      	MOVWF      R11
0x005D	0x30AF      	MOVLW      175
0x005E	0x00FC      	MOVWF      R12
0x005F	0x30B6      	MOVLW      182
0x0060	0x00FD      	MOVWF      R13
L_main14:
0x0061	0x0BFD      	DECFSZ     R13, 1
0x0062	0x2861      	GOTO       L_main14
0x0063	0x0BFC      	DECFSZ     R12, 1
0x0064	0x2861      	GOTO       L_main14
0x0065	0x0BFB      	DECFSZ     R11, 1
0x0066	0x2861      	GOTO       L_main14
0x0067	0x0000      	NOP
;MyProject.c,33 :: 		for (i = 0; i < 7; i++) {
0x0068	0x0AA0      	INCF       _i, 1
0x0069	0x1903      	BTFSC      STATUS, 2
0x006A	0x0AA1      	INCF       _i+1, 1
;MyProject.c,36 :: 		} // Fin del corrimiento 00000001
0x006B	0x283B      	GOTO       L_main11
L_main12:
;MyProject.c,37 :: 		i = 0; // Restablecemos i a 0
0x006C	0x01A0      	CLRF       _i
0x006D	0x01A1      	CLRF       _i+1
;MyProject.c,38 :: 		} else if (PORTA == 0x03) {
0x006E	0x2945      	GOTO       L_main15
L_main10:
0x006F	0x0805      	MOVF       PORTA, 0
0x0070	0x3A03      	XORLW      3
0x0071	0x1D03      	BTFSS      STATUS, 2
0x0072	0x28AD      	GOTO       L_main16
;MyProject.c,40 :: 		PORTB = 0x01; // Estado inicial del corrimiento 00000001
0x0073	0x3001      	MOVLW      1
0x0074	0x0086      	MOVWF      PORTB
;MyProject.c,41 :: 		i = 0; // Inicializamos i a 0
0x0075	0x01A0      	CLRF       _i
0x0076	0x01A1      	CLRF       _i+1
;MyProject.c,42 :: 		for (i = 0; i < 7; i++) {
0x0077	0x01A0      	CLRF       _i
0x0078	0x01A1      	CLRF       _i+1
L_main17:
0x0079	0x3080      	MOVLW      128
0x007A	0x0621      	XORWF      _i+1, 0
0x007B	0x00F0      	MOVWF      R0
0x007C	0x3080      	MOVLW      128
0x007D	0x0270      	SUBWF      R0, 0
0x007E	0x1D03      	BTFSS      STATUS, 2
0x007F	0x2882      	GOTO       L__main43
0x0080	0x3007      	MOVLW      7
0x0081	0x0220      	SUBWF      _i, 0
L__main43:
0x0082	0x1803      	BTFSC      STATUS, 0
0x0083	0x28AA      	GOTO       L_main18
;MyProject.c,43 :: 		PORTB = (PORTB << 1) | ((PORTB & 0x80) >> 7);
0x0084	0x0806      	MOVF       PORTB, 0
0x0085	0x00F3      	MOVWF      R3
0x0086	0x0DF3      	RLF        R3, 1
0x0087	0x1073      	BCF        R3, 0
0x0088	0x3080      	MOVLW      128
0x0089	0x0506      	ANDWF      PORTB, 0
0x008A	0x00F2      	MOVWF      R2
0x008B	0x3007      	MOVLW      7
0x008C	0x00F1      	MOVWF      R1
0x008D	0x0872      	MOVF       R2, 0
0x008E	0x00F0      	MOVWF      R0
0x008F	0x0871      	MOVF       R1, 0
L__main44:
0x0090	0x1903      	BTFSC      STATUS, 2
0x0091	0x2896      	GOTO       L__main45
0x0092	0x0CF0      	RRF        R0, 1
0x0093	0x13F0      	BCF        R0, 7
0x0094	0x3EFF      	ADDLW      255
0x0095	0x2890      	GOTO       L__main44
L__main45:
0x0096	0x0870      	MOVF       R0, 0
0x0097	0x0473      	IORWF      R3, 0
0x0098	0x0086      	MOVWF      PORTB
;MyProject.c,44 :: 		delay_ms(500);
0x0099	0x300D      	MOVLW      13
0x009A	0x00FB      	MOVWF      R11
0x009B	0x30AF      	MOVLW      175
0x009C	0x00FC      	MOVWF      R12
0x009D	0x30B6      	MOVLW      182
0x009E	0x00FD      	MOVWF      R13
L_main20:
0x009F	0x0BFD      	DECFSZ     R13, 1
0x00A0	0x289F      	GOTO       L_main20
0x00A1	0x0BFC      	DECFSZ     R12, 1
0x00A2	0x289F      	GOTO       L_main20
0x00A3	0x0BFB      	DECFSZ     R11, 1
0x00A4	0x289F      	GOTO       L_main20
0x00A5	0x0000      	NOP
;MyProject.c,42 :: 		for (i = 0; i < 7; i++) {
0x00A6	0x0AA0      	INCF       _i, 1
0x00A7	0x1903      	BTFSC      STATUS, 2
0x00A8	0x0AA1      	INCF       _i+1, 1
;MyProject.c,45 :: 		} // Fin del corrimiento 10000000
0x00A9	0x2879      	GOTO       L_main17
L_main18:
;MyProject.c,46 :: 		i = 0; // Restablecemos i a 0
0x00AA	0x01A0      	CLRF       _i
0x00AB	0x01A1      	CLRF       _i+1
;MyProject.c,47 :: 		} else if (PORTA == 0x04) {
0x00AC	0x2945      	GOTO       L_main21
L_main16:
0x00AD	0x0805      	MOVF       PORTA, 0
0x00AE	0x3A04      	XORLW      4
0x00AF	0x1D03      	BTFSS      STATUS, 2
0x00B0	0x2922      	GOTO       L_main22
;MyProject.c,51 :: 		PORTB = 0x80; // Estado inicial del corrimiento 10000000
0x00B1	0x3080      	MOVLW      128
0x00B2	0x0086      	MOVWF      PORTB
;MyProject.c,52 :: 		i = 0; // Inicializamos i a 0
0x00B3	0x01A0      	CLRF       _i
0x00B4	0x01A1      	CLRF       _i+1
;MyProject.c,53 :: 		for (i = 0; i < 7; i++) {
0x00B5	0x01A0      	CLRF       _i
0x00B6	0x01A1      	CLRF       _i+1
L_main23:
0x00B7	0x3080      	MOVLW      128
0x00B8	0x0621      	XORWF      _i+1, 0
0x00B9	0x00F0      	MOVWF      R0
0x00BA	0x3080      	MOVLW      128
0x00BB	0x0270      	SUBWF      R0, 0
0x00BC	0x1D03      	BTFSS      STATUS, 2
0x00BD	0x28C0      	GOTO       L__main46
0x00BE	0x3007      	MOVLW      7
0x00BF	0x0220      	SUBWF      _i, 0
L__main46:
0x00C0	0x1803      	BTFSC      STATUS, 0
0x00C1	0x28E8      	GOTO       L_main24
;MyProject.c,54 :: 		PORTB = (PORTB >> 1) | ((PORTB & 0x01) << 7);
0x00C2	0x0806      	MOVF       PORTB, 0
0x00C3	0x00F3      	MOVWF      R3
0x00C4	0x0CF3      	RRF        R3, 1
0x00C5	0x13F3      	BCF        R3, 7
0x00C6	0x3001      	MOVLW      1
0x00C7	0x0506      	ANDWF      PORTB, 0
0x00C8	0x00F2      	MOVWF      R2
0x00C9	0x3007      	MOVLW      7
0x00CA	0x00F1      	MOVWF      R1
0x00CB	0x0872      	MOVF       R2, 0
0x00CC	0x00F0      	MOVWF      R0
0x00CD	0x0871      	MOVF       R1, 0
L__main47:
0x00CE	0x1903      	BTFSC      STATUS, 2
0x00CF	0x28D4      	GOTO       L__main48
0x00D0	0x0DF0      	RLF        R0, 1
0x00D1	0x1070      	BCF        R0, 0
0x00D2	0x3EFF      	ADDLW      255
0x00D3	0x28CE      	GOTO       L__main47
L__main48:
0x00D4	0x0870      	MOVF       R0, 0
0x00D5	0x0473      	IORWF      R3, 0
0x00D6	0x0086      	MOVWF      PORTB
;MyProject.c,55 :: 		delay_ms(500);
0x00D7	0x300D      	MOVLW      13
0x00D8	0x00FB      	MOVWF      R11
0x00D9	0x30AF      	MOVLW      175
0x00DA	0x00FC      	MOVWF      R12
0x00DB	0x30B6      	MOVLW      182
0x00DC	0x00FD      	MOVWF      R13
L_main26:
0x00DD	0x0BFD      	DECFSZ     R13, 1
0x00DE	0x28DD      	GOTO       L_main26
0x00DF	0x0BFC      	DECFSZ     R12, 1
0x00E0	0x28DD      	GOTO       L_main26
0x00E1	0x0BFB      	DECFSZ     R11, 1
0x00E2	0x28DD      	GOTO       L_main26
0x00E3	0x0000      	NOP
;MyProject.c,53 :: 		for (i = 0; i < 7; i++) {
0x00E4	0x0AA0      	INCF       _i, 1
0x00E5	0x1903      	BTFSC      STATUS, 2
0x00E6	0x0AA1      	INCF       _i+1, 1
;MyProject.c,56 :: 		} // Fin del corrimiento 00000001
0x00E7	0x28B7      	GOTO       L_main23
L_main24:
;MyProject.c,59 :: 		PORTB = 0x01; // Estado inicial del corrimiento 00000001
0x00E8	0x3001      	MOVLW      1
0x00E9	0x0086      	MOVWF      PORTB
;MyProject.c,60 :: 		i = 0; // Inicializamos i a 0
0x00EA	0x01A0      	CLRF       _i
0x00EB	0x01A1      	CLRF       _i+1
;MyProject.c,61 :: 		for (i = 0; i < 7; i++) {
0x00EC	0x01A0      	CLRF       _i
0x00ED	0x01A1      	CLRF       _i+1
L_main27:
0x00EE	0x3080      	MOVLW      128
0x00EF	0x0621      	XORWF      _i+1, 0
0x00F0	0x00F0      	MOVWF      R0
0x00F1	0x3080      	MOVLW      128
0x00F2	0x0270      	SUBWF      R0, 0
0x00F3	0x1D03      	BTFSS      STATUS, 2
0x00F4	0x28F7      	GOTO       L__main49
0x00F5	0x3007      	MOVLW      7
0x00F6	0x0220      	SUBWF      _i, 0
L__main49:
0x00F7	0x1803      	BTFSC      STATUS, 0
0x00F8	0x291F      	GOTO       L_main28
;MyProject.c,62 :: 		PORTB = (PORTB << 1) | ((PORTB & 0x80) >> 7);
0x00F9	0x0806      	MOVF       PORTB, 0
0x00FA	0x00F3      	MOVWF      R3
0x00FB	0x0DF3      	RLF        R3, 1
0x00FC	0x1073      	BCF        R3, 0
0x00FD	0x3080      	MOVLW      128
0x00FE	0x0506      	ANDWF      PORTB, 0
0x00FF	0x00F2      	MOVWF      R2
0x0100	0x3007      	MOVLW      7
0x0101	0x00F1      	MOVWF      R1
0x0102	0x0872      	MOVF       R2, 0
0x0103	0x00F0      	MOVWF      R0
0x0104	0x0871      	MOVF       R1, 0
L__main50:
0x0105	0x1903      	BTFSC      STATUS, 2
0x0106	0x290B      	GOTO       L__main51
0x0107	0x0CF0      	RRF        R0, 1
0x0108	0x13F0      	BCF        R0, 7
0x0109	0x3EFF      	ADDLW      255
0x010A	0x2905      	GOTO       L__main50
L__main51:
0x010B	0x0870      	MOVF       R0, 0
0x010C	0x0473      	IORWF      R3, 0
0x010D	0x0086      	MOVWF      PORTB
;MyProject.c,63 :: 		delay_ms(500);
0x010E	0x300D      	MOVLW      13
0x010F	0x00FB      	MOVWF      R11
0x0110	0x30AF      	MOVLW      175
0x0111	0x00FC      	MOVWF      R12
0x0112	0x30B6      	MOVLW      182
0x0113	0x00FD      	MOVWF      R13
L_main30:
0x0114	0x0BFD      	DECFSZ     R13, 1
0x0115	0x2914      	GOTO       L_main30
0x0116	0x0BFC      	DECFSZ     R12, 1
0x0117	0x2914      	GOTO       L_main30
0x0118	0x0BFB      	DECFSZ     R11, 1
0x0119	0x2914      	GOTO       L_main30
0x011A	0x0000      	NOP
;MyProject.c,61 :: 		for (i = 0; i < 7; i++) {
0x011B	0x0AA0      	INCF       _i, 1
0x011C	0x1903      	BTFSC      STATUS, 2
0x011D	0x0AA1      	INCF       _i+1, 1
;MyProject.c,64 :: 		} // Fin del corrimiento 10000000
0x011E	0x28EE      	GOTO       L_main27
L_main28:
;MyProject.c,65 :: 		i = 0; // Restablecemos i a 0
0x011F	0x01A0      	CLRF       _i
0x0120	0x01A1      	CLRF       _i+1
;MyProject.c,66 :: 		} else if (PORTA == 0x05) {
0x0121	0x2945      	GOTO       L_main31
L_main22:
0x0122	0x0805      	MOVF       PORTA, 0
0x0123	0x3A05      	XORLW      5
0x0124	0x1D03      	BTFSS      STATUS, 2
0x0125	0x2944      	GOTO       L_main32
;MyProject.c,68 :: 		PORTB = 0x00;
0x0126	0x0186      	CLRF       PORTB
;MyProject.c,69 :: 		delay_ms(500);
0x0127	0x300D      	MOVLW      13
0x0128	0x00FB      	MOVWF      R11
0x0129	0x30AF      	MOVLW      175
0x012A	0x00FC      	MOVWF      R12
0x012B	0x30B6      	MOVLW      182
0x012C	0x00FD      	MOVWF      R13
L_main33:
0x012D	0x0BFD      	DECFSZ     R13, 1
0x012E	0x292D      	GOTO       L_main33
0x012F	0x0BFC      	DECFSZ     R12, 1
0x0130	0x292D      	GOTO       L_main33
0x0131	0x0BFB      	DECFSZ     R11, 1
0x0132	0x292D      	GOTO       L_main33
0x0133	0x0000      	NOP
;MyProject.c,70 :: 		PORTB = 0xFF;
0x0134	0x30FF      	MOVLW      255
0x0135	0x0086      	MOVWF      PORTB
;MyProject.c,71 :: 		delay_ms(500);
0x0136	0x300D      	MOVLW      13
0x0137	0x00FB      	MOVWF      R11
0x0138	0x30AF      	MOVLW      175
0x0139	0x00FC      	MOVWF      R12
0x013A	0x30B6      	MOVLW      182
0x013B	0x00FD      	MOVWF      R13
L_main34:
0x013C	0x0BFD      	DECFSZ     R13, 1
0x013D	0x293C      	GOTO       L_main34
0x013E	0x0BFC      	DECFSZ     R12, 1
0x013F	0x293C      	GOTO       L_main34
0x0140	0x0BFB      	DECFSZ     R11, 1
0x0141	0x293C      	GOTO       L_main34
0x0142	0x0000      	NOP
;MyProject.c,72 :: 		} else {
0x0143	0x2945      	GOTO       L_main35
L_main32:
;MyProject.c,74 :: 		PORTB = 0x00;
0x0144	0x0186      	CLRF       PORTB
;MyProject.c,75 :: 		}
L_main35:
L_main31:
L_main21:
L_main15:
L_main9:
L_main7:
;MyProject.c,76 :: 		}
0x0145	0x2824      	GOTO       L_main4
;MyProject.c,77 :: 		}
L_end_main:
0x0146	0x2946      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0005       [7]    _____DoICP
0x000C      [12]    ___CC2DW
0x0018     [303]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x0020       [2]    _i
0x0022       [2]    ___DoICPAddr
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x009F       [1]    ADCON1
